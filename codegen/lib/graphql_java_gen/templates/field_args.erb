<%= class_head %>

<%= render_java_doc("Arguments which are used when querying #{field.classify_name.downcase}.", "@author #{code_author}") %>
public class <%= field.classify_name %>Arguments extends Arguments {
    private final StringBuilder builder;

    <%= render_java_doc("@return builder which arguments are being added to") %>
    private StringBuilder builder() {
      return builder;
    }

    <%= render_java_doc("Constructor", "@param builder which arguments should be added to") %>
    public <%= field.classify_name %>Arguments(StringBuilder builder) {
        super(builder, <%= !!field.required_args.empty? %>);
        this.builder = builder;
    }

    <% field.optional_args.each do |arg| %>
        <%= render_java_doc(
          "Query by #{escape_reserved_word(arg.camelize_name)}.",
          "@param value to supply to the query",
          "@return this object with the added query parameter"
        ) %>
        public <%= field.classify_name %>Arguments <%= escape_reserved_word(arg.camelize_name) %>(<%= java_input_type(arg.type) %> value) {
            if (value != null) {
                startArgument("<%= arg.name %>");
                <%= generate_build_input_code('value', arg.type) %>
            }
            return this;
        }
    <% end %>
}
